{"version":3,"file":"static/js/779.33d9f013.chunk.js","mappings":"6NAEaA,E,OAAaC,GAAAA,WAAH,wK,SCkCvB,EAhCgB,WACd,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KASA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,eACvD,KACEC,EAAAA,EAAAA,IAAgBL,GAAgBM,MAAK,SAAAC,GAAO,OAAIT,EAAgBS,EAApB,GAG7C,CAFC,SACAC,QAAQC,IAAI,QACb,CACF,GAAE,KAED,8BACGZ,EAAaa,OAAS,GACrB,wBACGb,EAAac,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,yBACE,UAACpB,EAAD,YACE,uCAAemB,MACf,uBAAIC,QAHCF,EAOZ,OAGH,6CAIP,C,+LChCKG,EAAW,6BACXC,EAAM,mCAECC,EAAiB,mCAAG,qGACRC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,yCACkBC,IAFf,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,wFACHL,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,oBAAwBQ,EAAxB,oBAA2CP,IAD7C,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAgB,mCAAG,WAAMD,GAAN,wFACPL,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,oBACHQ,EADG,4BACwBP,IAFtB,cACxBG,EADwB,yBAKvBA,EAASC,KAAKK,MALS,2CAAH,sDAQhBpB,EAAe,mCAAG,WAAMkB,GAAN,wFACNL,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,oBACHQ,EADG,4BACwBP,IAFvB,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfK,EAAe,mCAAG,WAAMC,GAAN,wFACNT,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,mCACYC,EADZ,kBACyBW,IAFxB,cACvBR,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","servises/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Blockquote = styled.blockquote`\n  font-style: italic;\n  text-align: center;\n  p {\n    margin-top: 12px;\n  }\n  cite {\n    font-style: normal;\n    font-weight: 700;\n  }\n`;\n","import { getMovieReviews } from '../../servises/API';\nimport { useEffect, useState } from 'react';\nimport { Blockquote } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  useEffect(() => {\n    const movieReviewsId = JSON.parse(localStorage.getItem('savedMovie'));\n    try {\n      getMovieReviews(movieReviewsId).then(reviews => setMovieReviews(reviews));\n    } catch {\n      console.log('error');\n    }\n  }, []);\n  return (\n    <>\n      {movieReviews.length > 0 ? (\n        <ul>\n          {movieReviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <Blockquote>\n                  <cite>Author: {author}</cite>\n                  <p>{content}</p>\n                </Blockquote>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Review not found</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst KEY = '520d2e464644c0f1097ff46b301f91b7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios(\n    `${BASE_URL}/3/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios(`${BASE_URL}/3/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getMovieСastById = async movieId => {\n  const response = await axios(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const response = await axios(\n    `${BASE_URL}/3/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n\n  return response.data.results;\n};\n"],"names":["Blockquote","styled","useState","movieReviews","setMovieReviews","useEffect","movieReviewsId","JSON","parse","localStorage","getItem","getMovieReviews","then","reviews","console","log","length","map","id","author","content","BASE_URL","KEY","getTrendingMovies","axios","response","data","results","getMovieById","movieId","getMovieСastById","cast","getSearchMovies","searchQuery"],"sourceRoot":""}