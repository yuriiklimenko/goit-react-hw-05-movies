{"version":3,"file":"static/js/387.a3ff4ad4.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,GAAAA,GAAH,4EAMRC,EAAWD,EAAAA,GAAAA,GAAH,oLAURE,EAAWF,EAAAA,GAAAA,IAAH,yI,SC4BrB,EAzCa,WACX,OAAkCG,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,eAChD,KACEC,EAAAA,EAAAA,IAAiBL,GAASM,MAAK,SAAAC,GAAI,OAAIT,EAAaS,EAAjB,GAGpC,CAFC,SACAC,QAAQC,IAAI,QACb,CACF,GAAE,KAGD,8BACGZ,EAAUa,OAAS,GAClB,SAAClB,EAAD,UACGK,EAAUc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACxC,OACE,UAACrB,EAAD,YACE,gBACEsB,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAKJ,KAEP,UAACnB,EAAD,YACE,wBAAKmB,KACL,uCAAeC,UAXJH,EAelB,OAGH,6CAIP,C,+LC3CKO,EAAW,6BACXC,EAAM,mCAECC,EAAiB,mCAAG,qGACRC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,yCACkBC,IAFf,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,wFACHL,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,oBAAwBQ,EAAxB,oBAA2CP,IAD7C,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZnB,EAAgB,mCAAG,WAAMsB,GAAN,wFACPL,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,oBACHQ,EADG,4BACwBP,IAFtB,cACxBG,EADwB,yBAKvBA,EAASC,KAAKjB,MALS,2CAAH,sDAQhBqB,EAAe,mCAAG,WAAMD,GAAN,wFACNL,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,oBACHQ,EADG,4BACwBP,IAFvB,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfI,EAAe,mCAAG,WAAMC,GAAN,wFACNR,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,mCACYC,EADZ,kBACyBU,IAFxB,cACvBP,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","servises/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const ItemCast = styled.li`\n  min-height: 150px;\n  width: 150px;\n  background-color: grey;\n  border-radius: 15px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ItemText = styled.div`\n  height: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 14px;\n`;\n","import { getMovie小astById } from '../../servises/API';\nimport { useEffect, useState } from 'react';\nimport DefaultImage from '../../images/notFound.png';\nimport { ListCast, ItemCast, ItemText } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const MovieId = JSON.parse(localStorage.getItem('savedMovie'));\n    try {\n      getMovie小astById(MovieId).then(cast => setMovieCast(cast));\n    } catch {\n      console.log('error');\n    }\n  }, []);\n\n  return (\n    <>\n      {movieCast.length > 0 ? (\n        <ListCast>\n          {movieCast.map(({ id, profile_path, name, character }) => {\n            return (\n              <ItemCast key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : DefaultImage\n                  }\n                  alt={name}\n                />\n                <ItemText>\n                  <h3>{name}</h3>\n                  <p>Character: {character}</p>\n                </ItemText>\n              </ItemCast>\n            );\n          })}\n        </ListCast>\n      ) : (\n        <p>Actors not found</p>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst KEY = '520d2e464644c0f1097ff46b301f91b7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios(\n    `${BASE_URL}/3/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios(`${BASE_URL}/3/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getMovie小astById = async movieId => {\n  const response = await axios(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const response = await axios(\n    `${BASE_URL}/3/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n\n  return response.data.results;\n};\n"],"names":["ListCast","styled","ItemCast","ItemText","useState","movieCast","setMovieCast","useEffect","MovieId","JSON","parse","localStorage","getItem","getMovie小astById","then","cast","console","log","length","map","id","profile_path","name","character","src","DefaultImage","alt","BASE_URL","KEY","getTrendingMovies","axios","response","data","results","getMovieById","movieId","getMovieReviews","getSearchMovies","searchQuery"],"sourceRoot":""}