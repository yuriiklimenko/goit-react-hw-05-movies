{"version":3,"file":"static/js/779.0d7c7026.chunk.js","mappings":"mJAMA,IAJqB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACtB,OAAO,wBAAKA,GACb,C,6GCFYC,E,OAAaC,GAAAA,WAAH,wK,2BC6CvB,EAzCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBR,GAASS,MAAK,SAAAC,GAAO,OAAIN,EAAgBM,EAApB,GAGtC,CAFC,SACAJ,GAAS,EACV,CACF,GAAE,CAACN,KAGF,8BACGK,GACC,SAACM,EAAA,EAAD,CAAcd,QAAQ,6BAEtB,8BACGM,EAAaS,OAAS,GACrB,wBACGT,EAAaU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,yBACE,UAAClB,EAAD,YACE,uCAAeiB,MACf,uBAAIC,QAHCF,EAOZ,OAGH,+CAMX,C,+LC3CKG,EAAW,6BACXC,EAAM,mCAECC,EAAiB,mCAAG,qGACRC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,yCACkBC,IAFf,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMxB,GAAN,wFACHoB,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,oBAAwBjB,EAAxB,oBAA2CkB,IAD7C,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZG,EAAgB,mCAAG,WAAMzB,GAAN,wFACPoB,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,oBACHjB,EADG,4BACwBkB,IAFtB,cACxBG,EADwB,yBAKvBA,EAASC,KAAKI,MALS,2CAAH,sDAQhBlB,EAAe,mCAAG,WAAMR,GAAN,wFACNoB,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,oBACHjB,EADG,4BACwBkB,IAFvB,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfI,EAAe,mCAAG,WAAMC,GAAN,wFACNR,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,mCACYC,EADZ,kBACyBU,IAFxB,cACvBP,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,qD","sources":["components/Notification/Notification.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","servises/API.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <h2>{message}</h2>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Blockquote = styled.blockquote`\n  font-style: italic;\n  text-align: center;\n  p {\n    margin-top: 12px;\n  }\n  cite {\n    font-style: normal;\n    font-weight: 700;\n  }\n`;\n","import { getMovieReviews } from '../../servises/API';\nimport { useEffect, useState } from 'react';\nimport { Blockquote } from './Reviews.styled';\nimport { useParams } from 'react-router-dom';\nimport Notification from 'components/Notification/Notification';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    try {\n      getMovieReviews(movieId).then(reviews => setMovieReviews(reviews));\n    } catch {\n      setError(true);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {error ? (\n        <Notification message=\"Something went wrong...\" />\n      ) : (\n        <>\n          {movieReviews.length > 0 ? (\n            <ul>\n              {movieReviews.map(({ id, author, content }) => {\n                return (\n                  <li key={id}>\n                    <Blockquote>\n                      <cite>Author: {author}</cite>\n                      <p>{content}</p>\n                    </Blockquote>\n                  </li>\n                );\n              })}\n            </ul>\n          ) : (\n            <p>Review not found</p>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst KEY = '520d2e464644c0f1097ff46b301f91b7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios(\n    `${BASE_URL}/3/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios(`${BASE_URL}/3/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getMovieСastById = async movieId => {\n  const response = await axios(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const response = await axios(\n    `${BASE_URL}/3/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n\n  return response.data.results;\n};\n"],"names":["message","Blockquote","styled","movieId","useParams","useState","movieReviews","setMovieReviews","error","setError","useEffect","getMovieReviews","then","reviews","Notification","length","map","id","author","content","BASE_URL","KEY","getTrendingMovies","axios","response","data","results","getMovieById","getMovieСastById","cast","getSearchMovies","searchQuery"],"sourceRoot":""}